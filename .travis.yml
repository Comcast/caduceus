sudo: required

services:
    - docker

branches:
    only:
    - master

before_install:
    - docker pull schmidtw/xmidt.builder.centos6:latest
    - docker run -it -e BUILD_NUMBER=$TRAVIS_BUILD_NUMBER -d --name build schmidtw/xmidt.builder.centos6 bash
    - env
    - docker exec build rpm -q golang
    - docker exec build go version
    - docker exec build glide -v
    - docker exec build git clone https://github.com/Comcast/caduceus.git
    - docker exec build git clone https://github.com/Comcast/caduceus.git codecovio_build
    - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then openssl aes-256-cbc -K $encrypted_9f4e195b976a_key -iv $encrypted_9f4e195b976a_iv -in keys/RPM-GPG-KEY-comcast-xmidt.private.enc -out keys/RPM-GPG-KEY-comcast-xmidt.private -d; fi'
    - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker cp keys/RPM-GPG-KEY-comcast-xmidt.private build:/RPM-GPG-KEY-comcast-xmidt.private; fi'
    - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker exec build bash -c "gpg --allow-secret-key-import --import /RPM-GPG-KEY-comcast-xmidt.private"; fi'
    - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then docker exec build bash -c "pushd caduceus; git fetch origin +refs/pull/${TRAVIS_PULL_REQUEST}/merge && git checkout -qf FETCH_HEAD; popd"; fi'
    - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then docker exec build bash -c "pushd codecovio_build; git fetch origin +refs/pull/${TRAVIS_PULL_REQUEST}/merge && git checkout -qf FETCH_HEAD; popd"; fi'

script:
    - docker exec build bash -c "export GOPATH=/codecovio_build && pushd codecovio_build/src && glide install --strip-vendor && cd caduceus && go build caduceus && go test -race -coverprofile=coverage.txt && popd"
    - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker exec build bash -c "pushd caduceus; ./build_rpm.sh; popd"; fi'

after_success:
    - docker exec build bash -c "pushd codecovio_build ; bash <(curl -s https://codecov.io/bash) -t 367ce3b3-857c-42f8-87f9-1140a83f3ab4; popd"
    - docker cp build:/root/rpmbuild/RPMS/x86_64 .
    - docker cp build:/versionno.txt .
    - BINARY_NAME=`ls x86_64/`
    - TRAVIS_TAG=`cat versionno.txt`

deploy:
  provider: releases
  prerelease: true
  api_key: "$AUTH_TOKEN_BUILD"
  file:
    - x86_64/$BINARY_NAME
    - keys/RPM-GPG-KEY-comcast-xmidt
  skip_cleanup: true
  on:
    condition: "$TRAVIS_PULL_REQUEST = false"

